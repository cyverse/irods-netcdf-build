#!/bin/bash
#
# Usage:
#  build [OS...]
#
# Parameters:
#  OS  an operating system to build the packages for: centos6, centos7,
#      ubuntu14
#
# Builds the iRODS NetCDF plugin packages. It writes them into an OS specific
# subdirectory of packages/.
#

set -e

readonly AllOSes=(centos6 centos7 ubuntu14)


main()
{
  local oses=("$@")

  if [ ${#oses} -eq 0 ]
  then
    oses=(${AllOSes[*]})
  else
    for candidateOS in ${oses[*]}
    do
      local verified=false

      for os in ${AllOSes[*]}
      do
        if [ "$candidateOS" = "$os" ]
        then
          verified=true
          break
        fi
      done

      if [ "$verified" = false ]
      then
        printf 'The OS %s is unsupported\n' "$candidateOS" >&2
        return 1
      fi
    done
  fi

  build_selected ${oses[*]}
}


build_selected()
{
  local oses=("$@")

  local baseDir=$(dirname $(readlink --canonicalize "$0"))

  for os in ${oses[*]}
  do
    local image=irods-plugin-build:4.1.10-"$os"

    printf 'Building image %s\n' "$image"
    docker build --file "$baseDir"/dockerfiles/Dockerfile."$os" --tag "$image" "$baseDir"

    local src="$baseDir"/scratch/"$os"
    mkdir --parents "$src" $baseDir/packages/"$os"

    printf 'Copying source changes for %s build\n' "$os"
    cp --recursive --update "$baseDir"/irods_netcdf/* "$src"

    printf 'Building for %s\n' "$os"
    docker run --interactive --rm \
               --name=netcdf-builder \
               --user=$(id -u):$(id -g) \
               --volume="$src":/src \
               --volume="$baseDir"/packages:/packages \
               --volume="$baseDir"/scripts/build-packages.sh:/build-packages \
               "$image" /build-packages "$os"
  done

  # There are some bugs in the NetCDF build logic

  if [ -e "$baseDir"/packages/centos7 ]
  then
    for f in $(ls "$baseDir"/packages/centos7/*centos6*.rpm 2> /dev/null)
    do
      mv "$f" "${f/centos6/centos7}"
    done
  fi

  if [ -e "$baseDir"/packages/ubuntu14 ]
  then
    for f in $(ls "$baseDir"/packages/ubuntu14/*0.deb 2> /dev/null)
    do
      mv "$f" "${f/.deb/-ubuntu14.deb}"
    done
  fi
}


main "$@"
